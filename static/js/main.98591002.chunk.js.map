{"version":3,"sources":["api/api.js","Components/MainTable.jsx","Components/Content.jsx","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","markModel","createTableDataJsx","cars","tariffs_list","filterWord","selectedCar","selectCar","map","el","isFiltered","key","mark","model","toLowerCase","includes","tariffs","String","year","filter","forEach","tariff","hasOwnProperty","elClass","push","className","onClick","MainTable","fromLeast","carsInfo","sorting","setSorting","sort","a","b","undefined","newTariffsList","unshift","createTableHeadJsx","reduce","acc","length","Content","props","inputRef","React","createRef","useState","state","setState","useEffect","get","then","response","data","placeholder","ref","current","value","changes","Map","carName","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98591002.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: \"https://city-mobil.ru/api\"\n})\n\nexport const getData = () => {\n    return instance.get(\"/cars\")\n        .then(response => response.data)\n}","import React from \"react\";\n\nconst markModel = \"Марка и модель\";\n\nconst createSortingFunc = (key, fromLeast) => {\n    return (a, b) => {\n\n        if (key !== markModel) {\n            if ((a.tariffs[key] === undefined) && (b.tariffs[key] === undefined)) return 0\n            if ((a.tariffs[key] !== undefined) && (b.tariffs[key] === undefined)) return -1\n            if ((a.tariffs[key] === undefined) && (b.tariffs[key] !== undefined)) return 1\n\n            return (fromLeast ?\n                (a.tariffs[key].year - b.tariffs[key].year) :\n                (b.tariffs[key].year - a.tariffs[key].year))\n        } else {\n            if (a.mark + \" \" + a.model < b.mark + \" \" + b.model) return fromLeast ? -1 : 1\n            if (a.mark + \" \" + a.model > b.mark + \" \" + b.model) return fromLeast ? 1 : -1\n            return 0\n        }\n    }\n}\n\nconst filter = (el, filterWord) => {\n    let isFiltered = false;\n    if (filterWord !== null) {\n        isFiltered = (el.mark + \" \" + el.model).toLowerCase().includes(filterWord.toLowerCase());\n        for (let key in el.tariffs) {\n            if (!isFiltered) {\n                isFiltered = String(el.tariffs[key].year).toLowerCase().includes(filterWord.toLowerCase());\n            }\n        }\n    }\n    return isFiltered\n}\n\nconst createTableDataJsx = (cars, tariffs_list, filterWord, selectedCar, selectCar) => {\n     return cars.map(\n        el => {\n\n            let isFiltered = filter(el, filterWord);\n\n            if (isFiltered || filterWord == null) {\n                let tariffs = [];\n                tariffs_list.forEach(tariff => {\n                    if (el.tariffs.hasOwnProperty(tariff)) {\n\n                        let elClass = \"\";\n\n                        if (selectedCar === el.mark + \" \" + el.model + \" \" + el.tariffs[tariff].year) {\n                            elClass = \"Selected-td\";\n                        } else {\n                            elClass = \"Clickable\";\n                        }\n\n                        tariffs.push(<td className={elClass} onClick={\n                            () => {selectCar(el.mark + \" \" + el.model + \" \" + el.tariffs[tariff].year)}\n                        }>\n                            {el.tariffs[tariff].year}\n                        </td>);\n\n                    } else {\n                        tariffs.push(<td>-</td>);\n                    }\n                })\n                return (\n                    <tr>\n                        <td className={\"Car-name\"}>{el.mark + \" \" + el.model}</td>\n                        {tariffs}\n                    </tr>\n                )\n            } else { return }\n        }\n    )\n}\n\nconst createTableHeadJsx = (tariffs_list, sorting, setSorting) => {\n    let newTariffsList = [...tariffs_list];\n    newTariffsList.unshift(markModel);\n    newTariffsList = newTariffsList.map(\n        el => {\n            if (sorting.key !== el) {\n                return <th onClick={() => setSorting(el)}>{el}</th>\n            } else {\n                return <th onClick={() => setSorting(el)}>{el + \" \" + (sorting.fromLeast ? \"↓\" : \"↑\") }</th>\n            }\n        }\n    )\n    return newTariffsList;\n}\n\nexport const MainTable = ({filterWord, carsInfo, sorting, selectedCar, selectCar, setSorting}) => {\n\n    let tariffs_list = [];\n    let cars = [];\n\n    if (carsInfo !== null) {\n\n        tariffs_list = [...carsInfo.tariffs_list];\n        cars = [...carsInfo.cars];\n\n        if (sorting.key !== null) {\n            cars.sort(createSortingFunc(sorting.key, sorting.fromLeast));\n        }\n\n        cars = createTableDataJsx(cars, carsInfo.tariffs_list, filterWord, selectedCar, selectCar);\n\n        tariffs_list = createTableHeadJsx(tariffs_list, sorting, setSorting);\n\n        //Удаление шапки таблицы, если нет элементов\n        if (cars.reduce((acc, el) => {\n            if (el !== undefined) {acc = false}\n            return acc;\n        } , true)) {\n            tariffs_list = [];\n        }\n\n    }\n\n\n    return (\n        <div className=\"Main-table\">\n            <div className=\"Table-head\">\n                <table>\n                    <tr>\n                        {tariffs_list.length !== 0 ? tariffs_list : <div className=\"No-cars-label\">Машин не найдено</div>}\n                    </tr>\n                </table>\n            </div>\n            <div className=\"Scrolling-part\">\n                <table>\n                    {cars}\n                </table>\n            </div>\n        </div>\n    )\n}","import React, {useEffect, useState} from \"react\";\nimport {getData} from \"../api/api\";\nimport {MainTable} from \"./MainTable\";\n\nexport const Content = (props) => {\n\n    let inputRef = React.createRef()\n\n    const setSorting = (el) => {\n        let changes = new Map();\n        changes[true] = false;\n        changes[false] = null;\n        changes[null] = true;\n        setState({\n            ...state,\n            sorting : {\n                key: changes[state.sorting.fromLeast] !== null ? el : (el === state.sorting.key ? null : el),\n                fromLeast: el === state.sorting.key ? changes[state.sorting.fromLeast] : true\n            }\n        });\n    }\n\n    const filterCars = () => {\n        setState({\n            ...state,\n            filterWord: inputRef.current.value\n        });\n    }\n\n    const selectCar = (carName) => {\n        setState({\n            ...state,\n            selectedCar: carName,\n        });\n    }\n\n    let [state, setState] = useState({\n        carsInfo: null,\n        selectedCar: null,\n        filterWord: null,\n        sorting: {key: null, fromLeast: null}\n    });\n\n    useEffect(() => {\n        getData().then(\n            data => setState({...state , carsInfo: data})\n        )\n    }, []);\n\n    return (\n            <div className=\"Content\">\n                <div className=\"Input-form\">\n                    <input placeholder=\"🔍 Поиск\" ref = {inputRef}/>\n                    <button onClick={filterCars}>Найти</button>\n                </div>\n                <MainTable filterWord = {state.filterWord}\n                           carsInfo = {state.carsInfo}\n                           sorting = {state.sorting}\n                           selectedCar = {state.selectedCar}\n                           setSorting = {setSorting}\n                           selectCar = {selectCar}\n                />\n                <div className=\"Selected-car\">\n                    {state.selectedCar ? \"Выбран автомобиль \" + state.selectedCar + \" года выпуска.\" : \"Автомобиль не выбран.\"}\n                </div>\n            </div>\n    );\n}","import './App.css';\nimport './Components/Table.css';\nimport './Components/Input-form.css';\nimport {Content} from \"./Components/Content\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div>\n            header\n        </div>\n      </header>\n      <aside className=\"App-sidebar\">\n        <div>\n            sidebar\n        </div>\n      </aside>\n      <Content/>\n      <footer className=\"App-footer\">\n        <div>\n            footer\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}